# --- 1. ServiceAccount for Homepage to talk to the API Server ---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  namespace: default
---
# --- 2. The ConfigMap containing all your dashboard settings ---
apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage-config
  namespace: default
data:
  settings.yaml: |
    title: Homelab Dashboard
    providers:
      kubernetes:
        inCluster: true

  services.yaml: |
    - "Cluster Tools":
        - "Kubernetes Dashboard":
            href: https://dashboard.k8s.local
            icon: kubernetes-dashboard.png
            description: Cluster management UI

    - "Monitoring":
        - "Grafana":
            href: http://grafana.k8s.local
            icon: grafana.png
            description: Metrics and dashboards
        - "Prometheus":
            href: http://prometheus.k8s.local
            icon: prometheus.png
            description: Time-series database

    - "Media":
        - "Plex":
            href: http://192.168.1.221:32400/web
            icon: plex.png
            description: Media Server

    - "Automation":
        - "n8n":
            href: http://n8n.k8s.local
            icon: n8n.png
            description: Automation Platform
        - "Jenkins":
            href: http://jenkins.k8s.local
            icon: jenkins.png
            description: CI/CD Platform

  widgets.yaml: |
    - search:
        provider: duckduckgo
        target: _blank
    - kubernetes:
        cluster:
          show: true
        nodes:
          show: true

  bookmarks.yaml: |
    - Developer:
        - Github:
            - abbr: GH
              href: https://github.com/quazmoz
    - Profiles:
        - LinkedIn:
            - abbr: LI
              href: https://www.linkedin.com/in/quinnfavo/
        - QuinnFavo:
            - abbr: DevOps
              href: https://profile.quinnfavo.com/

  # --- These files are required by Homepage but can be empty ---
  docker.yaml: ""
  kubernetes.yaml: ""
  custom.css: ""
  custom.js: ""
---
# --- 3. RBAC rules to allow Homepage to read node/pod status ---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
rules:
  - apiGroups: [""]
    resources: ["nodes", "namespaces", "pods", "services"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["metrics.k8s.io"]
    resources: ["nodes", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: default
---
# --- 4. The internal Service to expose the pod ---
apiVersion: v1
kind: Service
metadata:
  name: homepage
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: homepage
---
# --- 5. The Deployment to run the Homepage application ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: homepage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homepage
    spec:
      serviceAccountName: homepage
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - name: homepage
          image: "ghcr.io/gethomepage/homepage:v0.8.10"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: HOMEPAGE_ALLOWED_HOSTS
              value: "homepage.k8s.local"
          volumeMounts:
            - name: config
              mountPath: /app/config
            # Add a new mount for the logs directory
            - name: logs
              mountPath: /app/config/logs
      volumes:
        - name: config
          configMap:
            name: homepage-config
        # Add a new emptyDir volume for logs
        - name: logs
          emptyDir: {}
---
# --- 6. The Ingress rule to expose Homepage to your network ---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homepage
  namespace: default
  annotations:
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: "Cluster Tools"
    gethomepage.dev/name: "Homepage"
    gethomepage.dev/icon: "homepage.png"
    gethomepage.dev/description: "This very dashboard"
spec:
  ingressClassName: nginx
  rules:
  - host: "homepage.k8s.local"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: homepage
            port:
              number: 3000

