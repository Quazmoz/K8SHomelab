# --- 1. ServiceAccount for Homepage to talk to the API Server ---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  namespace: default
---
# --- 2. The ConfigMap containing all your dashboard settings ---
# I've used our previously designed one since it's already customized for you.
apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage-config # The Deployment will look for this name
  namespace: default
data:
  # --- Homepage Settings ---
  settings.yaml: |
    title: Homelab Dashboard
    background: https://images.unsplash.com/photo-1506318137071-a8e063b4bec0?q=80&w=2693&auto=format&fit=crop
    providers:
      kubernetes:
        cluster:
          # This tells homepage to get stats from inside the cluster
          inCluster: true

  # --- Your list of services ---
  services.yaml: |
    - "Cluster Tools":
        - "Kubernetes Dashboard":
            href: https://dashboard.k8s.local
            icon: kubernetes-dashboard.png
            description: Cluster management UI

    - "Monitoring":
        - "Grafana":
            href: http://grafana.k8s.local
            icon: grafana.png
            description: Metrics and dashboards
        - "Prometheus":
            href: http://prometheus.k8s.local
            icon: prometheus.png
            description: Time-series database

    - "Media":
        - "Plex":
            # Make sure this is your correct Plex IP!
            href: http://192.168.1.240:32400/web
            icon: plex.png
            description: Media Server

  # --- Optional Widgets ---
  widgets.yaml: |
    - kubernetes:
        cluster:
          show: true
        nodes:
          show: true
    - resources:
        label: "Node Resources"
        kubernetes:
          k8s_node: "debiank8snode"

  # --- Optional Bookmarks ---
  bookmarks.yaml: |
    - "Favorites":
        - "GitHub":
            href: "https://github.com/quazmoz"

  # --- Leave these empty unless you use them ---
  docker.yaml: ""
  custom.css: ""
  custom.js: ""
---
# --- 3. RBAC rules to allow Homepage to read node/pod status ---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
rules:
  - apiGroups: [""]
    resources: ["nodes", "namespaces", "pods"]
    verbs: ["get", "list"]
  - apiGroups: ["metrics.k8s.io"]
    resources: ["nodes", "pods"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: default
---
# --- 4. The internal Service to expose the pod ---
apiVersion: v1
kind: Service
metadata:
  name: homepage
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: homepage
---
# --- 5. The Deployment to run the Homepage application ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: homepage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homepage
    spec:
      serviceAccountName: homepage
      containers:
        - name: homepage
          image: "ghcr.io/gethomepage/homepage:latest"
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          volumeMounts:
            - mountPath: /app/config/settings.yaml
              name: config
              subPath: settings.yaml
            - mountPath: /app/config/services.yaml
              name: config
              subPath: services.yaml
            - mountPath: /app/config/widgets.yaml
              name: config
              subPath: widgets.yaml
            - mountPath: /app/config/bookmarks.yaml
              name: config
              subPath: bookmarks.yaml
            - mountPath: /app/config/docker.yaml
              name: config
              subPath: docker.yaml
            - mountPath: /app/config/kubernetes.yaml
              name: config
              subPath: kubernetes.yaml
            - mountPath: /app/config/custom.css
              name: config
              subPath: custom.css
            - mountPath: /app/config/custom.js
              name: config
              subPath: custom.js
      volumes:
        - name: config
          configMap:
            # This must match the name of our ConfigMap above
            name: homepage-config
---
# --- 6. The Ingress rule to expose Homepage to your network ---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homepage
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: "homepage.k8s.local" # Using our standard hostname
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: homepage
            port:
              number: 3000